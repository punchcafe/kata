#Spiral Solver
=begin

#top border
#bottom border (for alignment)
#@position = [0,0]
@canvas 


def rotate(orient='cw', pos=@pos)
#throw error if not 'cw' or 'ccw'
  case pos
    when 'n' then pos = (orient == 'cw' ? 'e':'w')
    when 'e' then pos = (orient == 'cw' ? 's':'n')
    when 's' then pos = (orient == 'cw' ? 'w':'e')
    when 'w' then pos = (orient == 'cw' ? 'n':'s')
  end

don't use instance vars?

def vert_line(j_1,j_2)
	@position[1].upto(border){|j_dest|
	return (clash-2) unless clash -2 negative
	}
	return border-1
	#return the co-ordinate to draw to
def hor_line

def drawline
# draws a line between vertLine and position

def move
# implements vertline to find position
# draws line if possible and returns true and shifts @position
# else returns false

main body:

while move
	rotate
end

return @canvas

#drawline draws line on instance var, returns true if not finished


=end

tdds:
rotation works